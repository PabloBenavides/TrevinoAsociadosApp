/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.rubik.desk.trevino.gui;

import com.rubik.desk.trevino.model.Capacitador;
import com.rubik.desk.trevino.model.Reporte;
import com.rubik.desk.trevino.model.Seguridad;
import com.rubik.file.FileTypeFilter;
import com.rubik.manage.ManageDialogsSwing;
import com.rubik.parser.ParserName;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Dev
 */
public class Principal extends javax.swing.JFrame {
    
    File file_source;
    File file_capacitadores;
    
    Integer total_rows = 0;
    Integer process_rows = 0;
    
    ArrayList<Capacitador> capacitadores;
    Seguridad seguridad;
    ArrayList<String> erroneosList;
    
    public static Vector<Reporte> reporte = new Vector<>();

    /** Creates new form Principal */
    public Principal() {
        initComponents();
        
        file_capacitadores = new File("capacitadores.xlsx");
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        btnSel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtFileDuda = new javax.swing.JTextField();
        btnSel2 = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        lblInfo = new javax.swing.JLabel();
        chkAcomodar = new javax.swing.JCheckBox();
        btnIniciar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TrevinoApp");
        setResizable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Asociados Trevino - Generacion de Informacion");

        jLabel2.setText("Archivo:");

        txtFile.setEditable(false);

        btnSel.setText("Abrir");
        btnSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelActionPerformed(evt);
            }
        });

        jLabel3.setText("Archivo con nombres dudosos:");

        txtFileDuda.setEditable(false);

        btnSel2.setText("Seleccionar");

        lblInfo.setText("-");

        chkAcomodar.setSelected(true);
        chkAcomodar.setText("Acomodar nombres");

        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFile))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFileDuda, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSel2, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)))
                            .addComponent(lblInfo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chkAcomodar)
                        .addGap(0, 405, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFileDuda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSel2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkAcomodar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblInfo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelar)
                            .addComponent(btnIniciar))
                        .addContainerGap())))
        );

        jTabbedPane1.addTab("Reportes", jPanel1);

        jLabel6.setText("Carpeta de Firmas:");

        jLabel7.setText("Ruta de Reporte:");

        jTextField1.setEditable(false);
        jTextField1.setText("/firmas");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton3.setText("Buscar");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addContainerGap(170, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Configuracion", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelActionPerformed
        
        JFileChooser fchooser = new JFileChooser();
        FileFilter xlsxFilter = new FileTypeFilter(".xlsx", "Microsoft Excel Documents");
        FileFilter xlsFilter = new FileTypeFilter(".xls", "Microsoft Excel Documents ");
        fchooser.addChoosableFileFilter(xlsxFilter);
        fchooser.addChoosableFileFilter(xlsFilter);
        fchooser.setAcceptAllFileFilterUsed(true);
        fchooser.setCurrentDirectory(new File(new File("").getAbsolutePath()));
        fchooser.setDialogTitle("Seleccione el Archivo de SAP con el Layout establecido:");
        int result = fchooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            
            file_source = fchooser.getSelectedFile();
            txtFile.setText(file_source.getName());
        }
        
    }//GEN-LAST:event_btnSelActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed

        erroneosList = new ArrayList<>();
        
        fillCapacitadores_Seguridad();

        if (capacitadores.size() > 0) {

            if (file_source != null) {

                String nameOfFile;
                File file;
                String extension;

                ArrayList<Object> objects;
                XSSFWorkbook workbook;
                XSSFSheet sheet;
                XSSFCell celdaCurso;
                String valorCeldaCurso;
                int rows;
                int cols;

                try {
                    FileInputStream fis = new FileInputStream(file_source);
                    workbook = new XSSFWorkbook(fis);
                    sheet = workbook.getSheetAt(0);
                    celdaCurso = null;
                    valorCeldaCurso = null;

                    rows = sheet.getLastRowNum() + 1;
                    cols = sheet.getRow(0).getLastCellNum();

                    for (int row = 1; row < rows; row++) {

                        Reporte repo = new Reporte();

                        if (sheet.getRow(row) == null) {
                            break;
                        } else {
                            if ((sheet.getRow(row).getCell(1) == null) || sheet.getRow(row).getCell(1).toString().isEmpty()) {
                                break;
                            }
                        }

                        sheet.getRow(row).getCell(0).setCellType(Cell.CELL_TYPE_STRING);
                        sheet.getRow(row).getCell(1).setCellType(Cell.CELL_TYPE_STRING);
                        sheet.getRow(row).getCell(2).setCellType(Cell.CELL_TYPE_STRING);
                        sheet.getRow(row).getCell(3).setCellType(Cell.CELL_TYPE_STRING);
                        sheet.getRow(row).getCell(4).setCellType(Cell.CELL_TYPE_STRING);
                        sheet.getRow(row).getCell(5).setCellType(Cell.CELL_TYPE_STRING);
                        sheet.getRow(row).getCell(8).setCellType(Cell.CELL_TYPE_STRING);
                        sheet.getRow(row).getCell(9).setCellType(Cell.CELL_TYPE_STRING);

                        repo.setEmpleado_id(sheet.getRow(row).getCell(0).getStringCellValue());
                        repo.setNombre(sheet.getRow(row).getCell(1).getStringCellValue().toUpperCase());
                        repo.setCurp(sheet.getRow(row).getCell(2).getStringCellValue());
                        repo.setPuesto(sheet.getRow(row).getCell(3).getStringCellValue());
                        repo.setCurso(sheet.getRow(row).getCell(4).getStringCellValue());
                        repo.setDuracion(sheet.getRow(row).getCell(5).getStringCellValue());
                        repo.setFecha_inicio(sheet.getRow(row).getCell(6).getDateCellValue());
                        repo.setFecha_fin(sheet.getRow(row).getCell(7).getDateCellValue());
                        repo.setCine(sheet.getRow(row).getCell(8).getStringCellValue());
                        repo.setRegion(sheet.getRow(row).getCell(9).getStringCellValue().replace("GR-", ""));

                        if(chkAcomodar.isSelected()){
                            
                            String name_correct = ParserName.parserSimpleName(repo.getNombre());
                            
                            if(name_correct.equals("Nombre no especificado")){
                                erroneosList.add(repo.getEmpleado_id());
                            }else{
                                repo.setNombre(name_correct);
                            }
                        }
                        
                        if (repo.getRegion().substring(0, 1).equals("0")) {
                            repo.setRegion(repo.getRegion().replace("0", ""));
                        }
                        
                        if(repo.getCurp() == null){
                            continue;
                        }else{
                            if(repo.getCurp().isEmpty()){
                                continue;
                            }
                        }

                        SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
                        repo.setF_inicio(dt.format(repo.getFecha_inicio()));
                        repo.setF_fin(dt.format(repo.getFecha_fin()));

                        for (Capacitador capacitador : capacitadores) {
                            if (repo.getRegion().equals(capacitador.getRegion())) {
                                repo.setZona(capacitador.getZona());
                                repo.setJefatura(capacitador.getJefatura());
                                repo.setNombre_capacitador(capacitador.getNombre());
//                                repo.setEmpleado_id(capacitador.getEmpleado_id());
                                repo.setCorreo(capacitador.getCorreo());
                                repo.setRegion_capacitador(capacitador.getRegion());
                                repo.setUbicacion(capacitador.getUbicacion());
                                repo.setFile(capacitador.getFile());

                                repo.setSeguridad_nombre(seguridad.getNombre());
                                repo.setSeguridad_file(seguridad.getFile());

                                break;
                            }
                        }

                        reporte = new Vector<>();
                        reporte.add(repo);

                        System.out.println(row + " - " + repo.toString());

                        // Generar Archivo
                        Map<String, Object> params = new HashMap<String, Object>();

                        try {
                            FileInputStream fis_report = new FileInputStream("reports/formato_DC-3.jasper");
                            BufferedInputStream bufferedInputStream = new BufferedInputStream(fis_report);
                            JasperReport report_pdf = (JasperReport) JRLoader.loadObject(bufferedInputStream);

                            JasperPrint jasperPrint = JasperFillManager.fillReport(report_pdf, params, new JRBeanCollectionDataSource(reporte));
                            JasperExportManager.exportReportToPdfFile(jasperPrint, row + "_" + repo.getCurp() +".pdf");

                        } catch (Exception ex) {
                            ex.printStackTrace();
                            String er = "";
                            for (int i = 0; i < ex.getStackTrace().length; i++) {
                                er += ex.getStackTrace()[i].toString() + "\n";
                            }

                            ManageDialogsSwing.errorMessage("Error", ex.toString());
                            ManageDialogsSwing.errorMessage("Error", er);
                            break;
                        }

                        process_rows++;

                    }
                    System.out.println("Proceso terminado. TOTAL ROWS LEIDAS :  " + process_rows);

                } catch (IOException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Error ocurrido al cargar el archivo.", "ATENCION", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                ManageDialogsSwing.errorMessage("Atencion", "Debe seleccionar un archivo correcto para iniciar el proceso.");
            }

        } else {
            ManageDialogsSwing.errorMessage("Atencion", "No se pudo leer el archivo 'capacitadores.xlsx' favor de revisar que exista y que tenga el formato correcto.");
        }

    }//GEN-LAST:event_btnIniciarActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("System".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnSel;
    private javax.swing.JButton btnSel2;
    private javax.swing.JCheckBox chkAcomodar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtFileDuda;
    // End of variables declaration//GEN-END:variables

    
    public void fillCapacitadores_Seguridad(){
        
        capacitadores = new ArrayList<>();
        
        if (file_capacitadores.exists()) {
            String nameOfFile;
            File file;
            String extension;

            ArrayList<Object> objects;
            XSSFWorkbook workbook;
            XSSFSheet sheet;
            XSSFCell celdaCurso;
            String valorCeldaCurso;
            int rows;
            int cols;

            try {
                FileInputStream fis = new FileInputStream(file_capacitadores);
                workbook = new XSSFWorkbook(fis);
                sheet = workbook.getSheetAt(0);
                celdaCurso = null;
                valorCeldaCurso = null;

                rows = sheet.getLastRowNum() + 1;
                cols = sheet.getRow(0).getLastCellNum();

                int row = 1;
                for (row = 1; row < rows; row++) {

                    Capacitador capacitador = new Capacitador();

                    if (sheet.getRow(row) == null) {
                        break;
                    } else {
                        if ((sheet.getRow(row).getCell(3) == null) || sheet.getRow(row).getCell(3).toString().isEmpty()) {
                            break;
                        }
                    }

                    sheet.getRow(row).getCell(0).setCellType(Cell.CELL_TYPE_STRING);
                    sheet.getRow(row).getCell(1).setCellType(Cell.CELL_TYPE_STRING);
                    sheet.getRow(row).getCell(2).setCellType(Cell.CELL_TYPE_STRING);
                    sheet.getRow(row).getCell(3).setCellType(Cell.CELL_TYPE_STRING);
                    sheet.getRow(row).getCell(4).setCellType(Cell.CELL_TYPE_STRING);
                    sheet.getRow(row).getCell(5).setCellType(Cell.CELL_TYPE_STRING);
                    sheet.getRow(row).getCell(6).setCellType(Cell.CELL_TYPE_STRING);
                    sheet.getRow(row).getCell(7).setCellType(Cell.CELL_TYPE_STRING);

                    capacitador.setZona(sheet.getRow(row).getCell(0).getStringCellValue().toUpperCase());
                    capacitador.setJefatura(sheet.getRow(row).getCell(1).getStringCellValue());
                    capacitador.setEmpleado_id(sheet.getRow(row).getCell(2).getStringCellValue().replace(" ", ""));
                    capacitador.setNombre(sheet.getRow(row).getCell(3).getStringCellValue());
                    capacitador.setCorreo(sheet.getRow(row).getCell(4).getStringCellValue());
                    capacitador.setRegion(sheet.getRow(row).getCell(5).getStringCellValue());
                    capacitador.setUbicacion(sheet.getRow(row).getCell(6).getStringCellValue());
                    capacitador.setFile(sheet.getRow(row).getCell(7).getStringCellValue());

                    capacitadores.add(capacitador);
                }
                
                row++;
                row++;
                
                sheet.getRow(row).getCell(3).setCellType(Cell.CELL_TYPE_STRING);
                sheet.getRow(row).getCell(7).setCellType(Cell.CELL_TYPE_STRING);
                
                seguridad = new Seguridad();
                seguridad.setNombre(sheet.getRow(row).getCell(3).getStringCellValue().replace(" ", ""));
                seguridad.setFile(sheet.getRow(row).getCell(7).getStringCellValue().replace(" ", ""));

            } catch (IOException ex) {
                ex.printStackTrace();
                ManageDialogsSwing.errorMessage("Error en archivo", "Error ocurrido al cargar el archivo 'capacitadores.xlsx'. Verifique que el archivo tenga el formato indicado.");
            }
        } else {
            ManageDialogsSwing.errorMessage("Error en archivo", "Verifique que el archivo 'capacitadores.xlsx' exista en la carpeta de la aplicacion.");
        }
    }
    
    public static Vector<Reporte> generateCollection(){
        return reporte;
    }
    
}